@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor;
@model PaginatedList<MarmitoAPI.Models.MitoUser>

@{
    ViewData["Title"] = "Index";
}

<div id="title">
    <img id="titleimg" src="images/marmito.png">
</div>

<div>
        <form asp-action="Index" method="get" id="filterform">
            <div class="form-actions no-color">
                <p>
                    Filter par nom: <input id="filter" type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                    <input type="submit" value="Search" class="btn btn-default" /> |
                    <a asp-action="Index">Tout afficher</a>
                        <span id="plusspan">
                            <a asp-controller="Mito" asp-action="Create"><span id="plus" class="glyphicon glyphicon-plus" aria-hidden="true"></span></a>
                        </span>
                </p>
                <p>
                    <div>
                        <span>
                            @Html.CheckBox("indisp", true, new {onclick = "checks()"})
                            <label for="indisp">Indisponible</label>
                        </span>
                        <span>
                            @Html.CheckBox("famille", true, new {onclick = "checks()"})
                            <label for="famille">Famille</label>
                        </span>
                        <span>
                            @Html.CheckBox("travail", true, new {onclick = "checks()"})
                            <label for="travail">Travail</label>
                        </span>
                        <span>
                            @Html.CheckBox("amour", true, new {onclick = "checks()"})
                            <label for="amour">Amour</label>
                        </span>
                    </div>
                </p>
            </div>
        </form>
</div>

<div id="mitos">
    @foreach (MarmitoAPI.Models.MitoUser mito in Model)
    {
        <div class="mito">
            <div class="mitocategory">
                @if (mito.Mito.Category == MarmitoAPI.Models.Mito.CategoryList.INDISP)
                {
                    <span class="badge badge-pill badge-primary">Indisponible</span>
                }
                else if (mito.Mito.Category == MarmitoAPI.Models.Mito.CategoryList.FAMILY)
                {
                    <span class="badge badge-pill badge-secondary">Famille</span>
                }
                else if (mito.Mito.Category == MarmitoAPI.Models.Mito.CategoryList.WORK)
                {
                    <span class="badge badge-pill badge-success">Travail</span>
                }
                else if (mito.Mito.Category == MarmitoAPI.Models.Mito.CategoryList.LOVE)
                {
                    <span class="badge badge-pill badge-danger">Amour</span>
                }
                else
                {
                    <span class="badge badge-pill badge-dark">Autres</span>
                }
            </div>
            <div>
                <span class="mitocontent">&ldquo;&nbsp;@Html.DisplayFor(item => mito.Mito.Content)&nbsp;&rdquo;</span>
            </div>
            <div class="mitoauthor">
                - Proposé par&nbsp;@mito.User.Name
            </div>
            @if (httpContextAccessor.HttpContext.Request.Cookies.ContainsKey("Id"))
                    {
                        if (mito.Mito.AuthorId.ToString() == httpContextAccessor.HttpContext.Request.Cookies["Id"])
                        {
                            <div>
                                <span>
                                    <a asp-area="" asp-controller="Mito" asp-action="Update" asp-route-id="@mito.Mito.Id"><img class="imgmenu" src="~/images/edit.svg"/></a>
                                </span>
                                <span>
                                    <a asp-area="" asp-controller="Mito" asp-action="Remove" asp-route-id="@mito.Mito.Id"><img class="imgmenu" src="~/images/cross.png"/></a>
                                </span>
                            </div>
                        }
                    }
        </div>
        <hr/>
    }
</div>

<div>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <span>
        <a asp-action="Index"
        asp-route-sortOrder="@ViewData["CurrentSort"]"
        asp-route-page="@(Model.PageIndex - 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        asp-route-indisp="@ViewData["Indisp"]"
        asp-route-famille="@ViewData["Famille"]"
        asp-route-travail="@ViewData["Travail"]"
        asp-route-amour="@ViewData["Amour"]"
        class="btn btn-default @prevDisabled">
            Précédent
        </a>
    </span>
    <span>
        <a asp-action="Index"
        asp-route-sortOrder="@ViewData["CurrentSort"]"
        asp-route-page="@(Model.PageIndex + 1)"
        asp-route-SearchString="@ViewData["CurrentFilter"]"
        asp-route-indisp="@ViewData["Indisp"]"
        asp-route-famille="@ViewData["Famille"]"
        asp-route-travail="@ViewData["Travail"]"
        asp-route-amour="@ViewData["Amour"]"
        class="btn btn-default @nextDisabled">
            Suivant
        </a>
    </span>
    @if (@Model.TotalPages == 0)
    {
        <span>0</span>
    }
    else
    {
        <span>@Model.PageIndex</span>
    }
    <span>/</span>
    <span>@Model.TotalPages</span>
</div>
